{"version":3,"sources":["App.js","reportWebVitals.js","index.js","service/firebase.js","hook/use-auth.js","service/websocket.js"],"names":["Sidebar","React","lazy","Chatbox","Login","App","className","exact","path","fallback","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authContext","createContext","ProvideAuth","children","auth","useState","user","setUser","loginState","setLoginState","useEffect","onAuthStateChanged","socket","connect","signin","provider","GoogleAuthProvider","signInWithRedirect","console","log","catch","signout","signOut","useProvideAuth","Provider","value","useAuth","useContext","PrivateRoute","rest","location","pathname","state","from","io","autoConnect","on"],"mappings":"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","file":"static/js/main.f342f758.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport {\n  ProvideAuth,\n  PrivateRoute,\n} from './hook/use-auth';\n\nconst Sidebar = React.lazy(() => import('./component/Sidebar'));\nconst Chatbox = React.lazy(() => import('./component/Chatbox'));\nconst Login = React.lazy(() => import('./component/Login'));\n\n\n// import socket from './socket/socket';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <ProvideAuth>\n        <Router>\n          <Route exact path=\"/login\">\n            <Suspense fallback={<div>Loading...</div>}>\n              <Login />\n            </Suspense>\n          </Route>\n\n          <PrivateRoute exact path=\"/\">\n            <Redirect to=\"home\" />\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/home\">\n            <Router>\n              <Suspense fallback={<div>Loading...</div>}>\n                <Sidebar />\n              </Suspense>\n              <Switch>\n                <PrivateRoute exact path=\"/home/t/:roomID\">\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <Chatbox />\n                  </Suspense>\n                </PrivateRoute>\n              </Switch>\n            </Router>\n          </PrivateRoute>\n\n\n\n        </Router>\n      </ProvideAuth>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport('./style/main.css');\nimport('./style/common.css');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import firebase from \"firebase\";\nimport('firebase/auth');\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBtLFctIyZhPquAqnrLP8DxOCJnDv16xvI\",\n  authDomain: \"chat-app-73a8d.firebaseapp.com\",\n  projectId: \"chat-app-73a8d\",\n  storageBucket: \"chat-app-73a8d.appspot.com\",\n  messagingSenderId: \"1026946776432\",\n  appId: \"1:1026946776432:web:0e06c59bd41ce6ea01e3b5\",\n  measurementId: \"G-QKZ0YM2KWT\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nimport socket from '../service/websocket';\nimport firebase from '../service/firebase';\n\n\nconst authContext = React.createContext();\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nexport function useAuth() {\n  return useContext(authContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const [loginState, setLoginState] = useState(\"listening\");\n\n  useEffect(() => {\n    const unsubcribe = firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n        setLoginState(\"loged\");\n      } else {\n        setUser(null);\n        setLoginState(\"notloged\");\n      }\n    })\n\n    return unsubcribe;\n  }, [])\n\n  useEffect(() => {\n    if (loginState === \"loged\" && user) {\n      socket.auth = { user };\n      socket.connect();\n    }\n  }, [user, loginState]);\n\n  const signin = () => {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithRedirect(provider)\n      .then(() => {\n        console.log(\"Login Success\")\n      })\n      .catch(() => {\n        console.log(\"Login Failed\");\n      });\n  }\n\n  const signout = () => {\n    firebase.auth().signOut()\n      .then(() => setUser(null));\n  }\n\n  return {\n    loginState,\n    user,\n    signin,\n    signout\n  }\n}\n\nexport function PrivateRoute({ children, ...rest }) {\n  const auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        switch (auth.loginState) {\n          case \"listening\":\n            return (<p>Loading...</p>);\n          case \"loged\":\n            return (children);\n          case \"notloged\":\n            return (\n              <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n            )\n          default:\n            return (<p>Error</p>);\n        }\n      }}\n    />\n  )\n}","import { io } from 'socket.io-client';\n\nconst URL = \"https://msg-chatapp.herokuapp.com/\";\nconst socket = io(URL, { autoConnect: false });\n\nsocket.on(\"connect_error\", () => {\n  console.log('connect_error')\n});\n\nexport default socket;"],"sourceRoot":""}